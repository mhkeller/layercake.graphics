{"main":{"slug":"MapPoints.canvas.svelte","contents":"<script>\n  /**\n    Generates canvas dots onto a map using [d3-geo](https://github.com/d3/d3-geo).\n    @param {Function} projection – A D3 projection function. Pass this in as an uncalled function, e.g. `projection={geoAlbersUsa}`.\n    @param {Array} [features=$data.features] – A list of GeoJSOn features. By default, assumes `$data` is a GeoJSON Feature Collection and uses those features.\n    @param {Number} [r=3.5] – The point's radius.\n    @param {String} [fill='yellow'] – The point's fill color.\n    @param {String} [stroke='#000'] – The point's stroke color.\n    @param {Number} [strokeWidth=1] – The point's stroke width.\n  */\n  import { getContext } from 'svelte';\n  import { scaleCanvas } from 'layercake';\n\n  const { data, width, height } = getContext('LayerCake');\n\n  const { ctx } = getContext('canvas');\n\n  export let projection;\n\n  export let features = $data.features;\n  export let r = 3.5;\n  export let fill = 'yellow';\n  export let stroke = '#000';\n  export let strokeWidth = 1;\n\n  $: projectionFn = projection()\n    .fitSize([$width, $height], $data);\n\n  $: {\n    if ($ctx) {\n      scaleCanvas($ctx, $width, $height);\n      $ctx.clearRect(0, 0, $width, $height);\n\n      // To scale the circle by size, set width and height to `$rGet(d.properties)`\n      features.forEach(d => {\n        $ctx.beginPath();\n        const coordinates = projectionFn(d.geometry.coordinates);\n        $ctx.arc(coordinates[0], coordinates[1], r, 0, 2 * Math.PI, false);\n        $ctx.fillStyle = fill;\n        $ctx.fill();\n        $ctx.lineWidth = strokeWidth;\n        $ctx.strokeStyle = stroke;\n        $ctx.stroke();\n      });\n    }\n  }\n</script>"},"dek":"","usedIn":[{"group":"Regular","matches":[]},{"group":"SSR","matches":[]}],"jsdocParsed":{"description":"Generates canvas dots onto a map using [d3-geo](https://github.com/d3/d3-geo).","tags":[{"title":"param","description":"– A D3 projection function. Pass this in as an uncalled function, e.g. `projection={geoAlbersUsa}`.","type":{"type":"NameExpression","name":"Function"},"name":"projection"},{"title":"param","description":"– A list of GeoJSOn features. By default, assumes `$data` is a GeoJSON Feature Collection and uses those features.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Array"}},"name":"features","default":"$data.features"},{"title":"param","description":"– The point's radius.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Number"}},"name":"r","default":"3.5"},{"title":"param","description":"– The point's fill color.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"String"}},"name":"fill","default":"'yellow'"},{"title":"param","description":"– The point's stroke color.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"String"}},"name":"stroke","default":"'#000'"},{"title":"param","description":"– The point's stroke width.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Number"}},"name":"strokeWidth","default":"1"}]}}