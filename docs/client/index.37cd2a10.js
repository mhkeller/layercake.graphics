import{S as e,i as t,s as a,e as s,t as r,a as l,c as o,b as n,d as i,f as c,g as h,h as v,j as f,k as p,l as d,m,n as u,o as g,p as y,q as k,r as w,u as b,v as S,w as E,x,y as L,z as $}from"./client.9bda600d.js";import{h as A,a as C}from"./hljsDefineSvelte.1daad94a.js";function H(e,t,a){const s=e.slice();return s[1]=t[a],s}function I(e,t,a){const s=e.slice();return s[1]=t[a],s}function V(e){let t,a,w,b,S,E,x,A,C,H,I,V,P,j=e[1].title+"";var D=e[1].component;return D&&(I=new D({})),{c(){t=s("div"),a=s("h4"),w=s("a"),b=r(j),E=l(),x=s("a"),A=r("Edit"),H=l(),I&&u(I.$$.fragment),V=l(),this.h()},l(e){t=o(e,"DIV",{class:!0});var s=n(t);a=o(s,"H4",{class:!0});var r=n(a);w=o(r,"A",{rel:!0,href:!0,class:!0});var l=n(w);b=i(l,j),l.forEach(c),E=h(r),x=o(r,"A",{class:!0,href:!0,target:!0,rel:!0});var v=n(x);A=i(v,"Edit"),v.forEach(c),r.forEach(c),H=h(s),I&&L(I.$$.fragment,s),V=h(s),s.forEach(c),this.h()},h(){v(w,"rel","prefetch"),v(w,"href",S="example/"+e[1].slug),v(w,"class","svelte-1r0uiei"),v(x,"class","edit-repl svelte-1r0uiei"),v(x,"href",C="https://svelte.dev/repl/"+e[1].replPath),v(x,"target","_blank"),v(x,"rel","nofollow"),v(a,"class","title svelte-1r0uiei"),v(t,"class","gallery-item svelte-1r0uiei")},m(e,s){f(e,t,s),p(t,a),p(a,w),p(w,b),p(a,E),p(a,x),p(x,A),p(t,H),I&&y(I,t,null),p(t,V),P=!0},p(e,a){if(D!==(D=e[1].component)){if(I){$();const e=I;d(e.$$.fragment,1,0,()=>{k(e,1)}),m()}D?(I=new D({}),u(I.$$.fragment),g(I.$$.fragment,1),y(I,t,V)):I=null}},i(e){P||(I&&g(I.$$.fragment,e),P=!0)},o(e){I&&d(I.$$.fragment,e),P=!1},d(e){e&&c(t),I&&k(I)}}}function P(e){let t,a,b,S,E,x,A,C,H,I,V,P,j,D=e[1].title+"";var T=e[1].component;return T&&(V=new T({})),{c(){t=s("div"),a=s("h4"),b=s("a"),S=r(D),x=l(),A=s("a"),C=r("Edit"),I=l(),V&&u(V.$$.fragment),P=l(),this.h()},l(e){t=o(e,"DIV",{class:!0});var s=n(t);a=o(s,"H4",{class:!0});var r=n(a);b=o(r,"A",{rel:!0,href:!0,class:!0});var l=n(b);S=i(l,D),l.forEach(c),x=h(r),A=o(r,"A",{class:!0,href:!0,target:!0,rel:!0});var v=n(A);C=i(v,"Edit"),v.forEach(c),r.forEach(c),I=h(s),V&&L(V.$$.fragment,s),P=h(s),s.forEach(c),this.h()},h(){v(b,"rel","prefetch"),v(b,"href",E="example-ssr/"+e[1].slug),v(b,"class","svelte-1r0uiei"),v(A,"class","edit-repl svelte-1r0uiei"),v(A,"href",H="https://svelte.dev/repl/"+e[1].replPath),v(A,"target","_blank"),v(A,"rel","nofollow"),v(a,"class","title svelte-1r0uiei"),v(t,"class","gallery-item svelte-1r0uiei"),w(t,"scaled",e[1].title.toLowerCase().includes("map"))},m(e,s){f(e,t,s),p(t,a),p(a,b),p(b,S),p(a,x),p(a,A),p(A,C),p(t,I),V&&y(V,t,null),p(t,P),j=!0},p(e,a){if(T!==(T=e[1].component)){if(V){$();const e=V;d(e.$$.fragment,1,0,()=>{k(e,1)}),m()}T?(V=new T({}),u(V.$$.fragment),g(V.$$.fragment,1),y(V,t,P)):V=null}0&a&&w(t,"scaled",e[1].title.toLowerCase().includes("map"))},i(e){j||(V&&g(V.$$.fragment,e),j=!0)},o(e){V&&d(V.$$.fragment,e),j=!1},d(e){e&&c(t),V&&k(V)}}}function j(e){let t,a,u,y,k,w,L,C,j,D,T,G,M,z,J,N,_,B,R,U,W,X,Y,q,F,K,O,Q,Z,ee,te,ae,se,re,le,oe,ne,ie,ce,he,ve,fe,pe,de,me,ue,ge,ye,ke,we,be,Se,Ee,xe,Le,$e,Ae,Ce,He,Ie,Ve,Pe,je,De,Te,Ge,Me,ze,Je,Ne,_e,Be,Re,Ue,We=A.highlight("svelte",e[0]).value+"",Xe=S,Ye=[];for(let t=0;t<Xe.length;t+=1)Ye[t]=V(I(e,Xe,t));const qe=e=>d(Ye[e],1,1,()=>{Ye[e]=null});let Fe=E,Ke=[];for(let t=0;t<Fe.length;t+=1)Ke[t]=P(H(e,Fe,t));const Oe=e=>d(Ke[e],1,1,()=>{Ke[e]=null});return{c(){t=s("meta"),a=s("meta"),u=s("link"),y=l(),k=s("div"),w=s("div"),L=s("div"),C=l(),j=s("h1"),D=r("Layer Cake"),T=l(),G=s("div"),M=s("p"),z=r("Layer Cake is a graphics framework for "),J=s("a"),N=r("Svelte"),_=r(". It uses the measurements of your target div and your data extents to create scales that "),B=s("span"),R=r("stay synced"),U=r(" on layout changes. Use these scales to organize multiple, "),W=s("span"),X=r("mostly-reusable Svelte components"),Y=r(", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time. It can also be used to easily create "),q=s("span"),F=r("responsive graphics server-side"),K=r(" that "),O=s("a"),Q=r("work without JavaScript"),Z=r("."),ee=l(),te=s("p"),ae=r("Unlike other libraries, chart components "),se=s("span"),re=r("live inside your project"),le=r(", so you have complete control for "),oe=s("span"),ne=r("customization"),ie=r("."),ce=l(),he=s("p"),ve=r("Read the "),fe=s("a"),pe=r("guide"),de=r(", try the "),me=s("a"),ue=r("starter template"),ge=r(" or check out "),ye=s("a"),ke=r("example components"),we=r(". See the examples below and even edit them live. Here's a sample of what the code looks like:"),be=l(),Se=s("div"),Ee=s("pre"),xe=l(),Le=s("div");for(let e=0;e<Ye.length;e+=1)Ye[e].c();$e=l(),Ae=s("div"),Ce=s("h2"),He=r("Server-side rendering"),Ie=l(),Ve=s("p"),Pe=r("Svelte makes it easy to render your project server side and Layer Cake has built-in helpers to make it even easier for charts. All of these examples below (except for their canvas components) will load and be responsive without client-side JavaScript. The advantage is that you can see the chart as soon as the page loads, avoiding blank placeholder spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),je=s("a"),De=r("viewBox"),Te=r(" and CSS settings that Rich Harris, Svelte's creator, outlined in "),Ge=s("a"),Me=r("this blog post"),ze=r("."),Je=l(),Ne=s("p"),_e=r("For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),Be=l(),Re=s("div");for(let e=0;e<Ke.length;e+=1)Ke[e].c();this.h()},l(e){const s=b('[data-svelte="svelte-1ik47nv"]',document.head);t=o(s,"META",{name:!0,content:!0}),a=o(s,"META",{name:!0,content:!0}),u=o(s,"LINK",{rel:!0,href:!0}),s.forEach(c),y=h(e),k=o(e,"DIV",{class:!0});var r=n(k);w=o(r,"DIV",{class:!0});var l=n(w);L=o(l,"DIV",{id:!0,class:!0}),n(L).forEach(c),C=h(l),j=o(l,"H1",{class:!0});var v=n(j);D=i(v,"Layer Cake"),v.forEach(c),l.forEach(c),T=h(r),G=o(r,"DIV",{id:!0,class:!0});var f=n(G);M=o(f,"P",{class:!0});var p=n(M);z=i(p,"Layer Cake is a graphics framework for "),J=o(p,"A",{href:!0,target:!0,rel:!0,class:!0});var d=n(J);N=i(d,"Svelte"),d.forEach(c),_=i(p,". It uses the measurements of your target div and your data extents to create scales that "),B=o(p,"SPAN",{class:!0});var m=n(B);R=i(m,"stay synced"),m.forEach(c),U=i(p," on layout changes. Use these scales to organize multiple, "),W=o(p,"SPAN",{class:!0});var g=n(W);X=i(g,"mostly-reusable Svelte components"),g.forEach(c),Y=i(p,", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time. It can also be used to easily create "),q=o(p,"SPAN",{class:!0});var S=n(q);F=i(S,"responsive graphics server-side"),S.forEach(c),K=i(p," that "),O=o(p,"A",{href:!0,class:!0});var E=n(O);Q=i(E,"work without JavaScript"),E.forEach(c),Z=i(p,"."),p.forEach(c),ee=h(f),te=o(f,"P",{});var x=n(te);ae=i(x,"Unlike other libraries, chart components "),se=o(x,"SPAN",{class:!0});var $=n(se);re=i($,"live inside your project"),$.forEach(c),le=i(x,", so you have complete control for "),oe=o(x,"SPAN",{class:!0});var A=n(oe);ne=i(A,"customization"),A.forEach(c),ie=i(x,"."),x.forEach(c),ce=h(f),he=o(f,"P",{class:!0});var H=n(he);ve=i(H,"Read the "),fe=o(H,"A",{href:!0,rel:!0,class:!0});var I=n(fe);pe=i(I,"guide"),I.forEach(c),de=i(H,", try the "),me=o(H,"A",{href:!0,target:!0,rel:!0,class:!0});var V=n(me);ue=i(V,"starter template"),V.forEach(c),ge=i(H," or check out "),ye=o(H,"A",{href:!0,rel:!0,class:!0});var P=n(ye);ke=i(P,"example components"),P.forEach(c),we=i(H,". See the examples below and even edit them live. Here's a sample of what the code looks like:"),H.forEach(c),f.forEach(c),be=h(r),Se=o(r,"DIV",{class:!0});var Ue=n(Se);Ee=o(Ue,"PRE",{class:!0}),n(Ee).forEach(c),Ue.forEach(c),xe=h(r),Le=o(r,"DIV",{id:!0});var We=n(Le);for(let e=0;e<Ye.length;e+=1)Ye[e].l(We);We.forEach(c),$e=h(r),Ae=o(r,"DIV",{class:!0,id:!0});var Xe=n(Ae);Ce=o(Xe,"H2",{class:!0});var qe=n(Ce);He=i(qe,"Server-side rendering"),qe.forEach(c),Ie=h(Xe),Ve=o(Xe,"P",{class:!0});var Fe=n(Ve);Pe=i(Fe,"Svelte makes it easy to render your project server side and Layer Cake has built-in helpers to make it even easier for charts. All of these examples below (except for their canvas components) will load and be responsive without client-side JavaScript. The advantage is that you can see the chart as soon as the page loads, avoiding blank placeholder spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),je=o(Fe,"A",{href:!0,target:!0,rel:!0,class:!0});var Oe=n(je);De=i(Oe,"viewBox"),Oe.forEach(c),Te=i(Fe," and CSS settings that Rich Harris, Svelte's creator, outlined in "),Ge=o(Fe,"A",{href:!0,target:!0,rel:!0,class:!0});var Qe=n(Ge);Me=i(Qe,"this blog post"),Qe.forEach(c),ze=i(Fe,"."),Fe.forEach(c),Je=h(Xe),Ne=o(Xe,"P",{});var Ze=n(Ne);_e=i(Ze,"For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),Ze.forEach(c),Xe.forEach(c),Be=h(r),Re=o(r,"DIV",{id:!0});var et=n(Re);for(let e=0;e<Ke.length;e+=1)Ke[e].l(et);et.forEach(c),r.forEach(c),this.h()},h(){document.title="Layer Cake",v(t,"name","og:title"),v(t,"content","Layer Cake"),v(a,"name","twitter:title"),v(a,"content","Layer Cake"),v(u,"rel","stylesheet"),v(u,"href","hljs.css"),v(L,"id","logo"),v(L,"class","svelte-1r0uiei"),v(j,"class","svelte-1r0uiei"),v(w,"class","logo-container svelte-1r0uiei"),v(J,"href","https://svelte.dev"),v(J,"target","_blank"),v(J,"rel","noopener"),v(J,"class","svelte-1r0uiei"),v(B,"class","strong svelte-1r0uiei"),v(W,"class","strong svelte-1r0uiei"),v(q,"class","strong svelte-1r0uiei"),v(O,"href","#server-side"),v(O,"class","svelte-1r0uiei"),v(M,"class","svelte-1r0uiei"),v(se,"class","strong svelte-1r0uiei"),v(oe,"class","strong svelte-1r0uiei"),v(fe,"href","guide"),v(fe,"rel","prefetch"),v(fe,"class","svelte-1r0uiei"),v(me,"href","https://github.com/mhkeller/layercake-template"),v(me,"target","_blank"),v(me,"rel","nofollow"),v(me,"class","svelte-1r0uiei"),v(ye,"href","components"),v(ye,"rel","prefetch"),v(ye,"class","svelte-1r0uiei"),v(he,"class","svelte-1r0uiei"),v(G,"id","dek"),v(G,"class","svelte-1r0uiei"),v(Ee,"class","svelte-1r0uiei"),v(Se,"class","code-example svelte-1r0uiei"),v(Le,"id","gallery"),v(Ce,"class","svelte-1r0uiei"),v(je,"href","https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox"),v(je,"target","_blank"),v(je,"rel","nofollow"),v(je,"class","svelte-1r0uiei"),v(Ge,"href","https://dev.to/richharris/a-new-technique-for-making-responsive-javascript-free-charts-gmp"),v(Ge,"target","_blank"),v(Ge,"rel","nofollow"),v(Ge,"class","svelte-1r0uiei"),v(Ve,"class","svelte-1r0uiei"),v(Ae,"class","section-hed svelte-1r0uiei"),v(Ae,"id","server-side"),v(Re,"id","ssr-gallery"),v(k,"class","main svelte-1r0uiei")},m(e,s){p(document.head,t),p(document.head,a),p(document.head,u),f(e,y,s),f(e,k,s),p(k,w),p(w,L),p(w,C),p(w,j),p(j,D),p(k,T),p(k,G),p(G,M),p(M,z),p(M,J),p(J,N),p(M,_),p(M,B),p(B,R),p(M,U),p(M,W),p(W,X),p(M,Y),p(M,q),p(q,F),p(M,K),p(M,O),p(O,Q),p(M,Z),p(G,ee),p(G,te),p(te,ae),p(te,se),p(se,re),p(te,le),p(te,oe),p(oe,ne),p(te,ie),p(G,ce),p(G,he),p(he,ve),p(he,fe),p(fe,pe),p(he,de),p(he,me),p(me,ue),p(he,ge),p(he,ye),p(ye,ke),p(he,we),p(k,be),p(k,Se),p(Se,Ee),Ee.innerHTML=We,p(k,xe),p(k,Le);for(let e=0;e<Ye.length;e+=1)Ye[e].m(Le,null);p(k,$e),p(k,Ae),p(Ae,Ce),p(Ce,He),p(Ae,Ie),p(Ae,Ve),p(Ve,Pe),p(Ve,je),p(je,De),p(Ve,Te),p(Ve,Ge),p(Ge,Me),p(Ve,ze),p(Ae,Je),p(Ae,Ne),p(Ne,_e),p(k,Be),p(k,Re);for(let e=0;e<Ke.length;e+=1)Ke[e].m(Re,null);Ue=!0},p(e,[t]){if(0&t){let a;for(Xe=S,a=0;a<Xe.length;a+=1){const s=I(e,Xe,a);Ye[a]?(Ye[a].p(s,t),g(Ye[a],1)):(Ye[a]=V(s),Ye[a].c(),g(Ye[a],1),Ye[a].m(Le,null))}for($(),a=Xe.length;a<Ye.length;a+=1)qe(a);m()}if(0&t){let a;for(Fe=E,a=0;a<Fe.length;a+=1){const s=H(e,Fe,a);Ke[a]?(Ke[a].p(s,t),g(Ke[a],1)):(Ke[a]=P(s),Ke[a].c(),g(Ke[a],1),Ke[a].m(Re,null))}for($(),a=Fe.length;a<Ke.length;a+=1)Oe(a);m()}},i(e){if(!Ue){for(let e=0;e<Xe.length;e+=1)g(Ye[e]);for(let e=0;e<Fe.length;e+=1)g(Ke[e]);Ue=!0}},o(e){Ye=Ye.filter(Boolean);for(let e=0;e<Ye.length;e+=1)d(Ye[e]);Ke=Ke.filter(Boolean);for(let e=0;e<Ke.length;e+=1)d(Ke[e]);Ue=!1},d(e){c(t),c(a),c(u),e&&c(y),e&&c(k),x(Ye,e),x(Ke,e)}}}function D(e){A.registerLanguage("svelte",C),C(A);return["<script>\n\t// The library provides a main wrapper component\n\t// and a bunch empty layout components...\n\timport { LayerCake, Svg, Html, Canvas } from 'layercake';\n\n\t// ...that you fill with your own chart components,\n\t// that live inside your project and which you\n\t// can copy and paste from here as starting points.\n\timport AxisX from './components/AxisX.svelte';\n\timport AxisY from './components/AxisY.svelte';\n\timport Line from './components/Line.svelte';\n\timport Scatter from './components/Scatter.svelte';\n\timport Labels from './components/Labels.svelte';\n\n\tconst data = [{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }];\n<\/script>\n\n<style>\n\t.chart-container {\n\t\twidth: 100%;\n\t\theight: 500px;\n\t}\n</style>\n\n<div class=\"chart-container\">\n\t<LayerCake\n\t\tx='x'\n\t\ty='y'\n\t\t{data}\n\t>\n\t\t<Svg>\n\t\t\t<AxisX/>\n\t\t\t<AxisY/>\n\t\t\t<Line color='#f0c'/>\n\t\t</Svg>\n\n\t\t<Canvas>\n\t\t\t<Scatter color='#0fc'/>\n\t\t</Canvas>\n\n\t\t<Html>\n\t\t\t<Labels/>\n\t\t</Html>\n\t</LayerCake>\n</div>".trim().replace(/\t/g,"  ")]}export default class extends e{constructor(e){super(),t(this,e,D,j,a,{})}}
