{"main":{"slug":"Labels.html.svelte","contents":"<script>\n  /**\n    Adds HTML text labels based on a given list.\n    @type {List} labels – An array of objects that contain a field containing text label and data fields.\n    @type {String} [stroke=''] – The shape's stroke color.\n    @type {Number} [strokeWidth=0] – The shape's stroke width.\n  */\n  import { getContext } from 'svelte';\n\n  const { xGet, yGet, custom } = getContext('LayerCake');\n\n  export let labels;\n  export let formatName = d => d;\n</script>\n\n{#each labels as d}\n  <div\n    class=\"label\"\n    style=\"\n      top:{$yGet(d)}px;\n      left:{$xGet(d)}px;\n    \"\n  >{formatName($custom.getLabelName(d))}</div>\n{/each}\n\n<style>\n  .label {\n    position: absolute;\n    transform: translate(-50%, -50%);\n    font-size: 12px;\n  }\n</style>"},"dek":"","usedIn":[{"group":"Regular","matches":["/example/MapLayered","/example/MultiLine"]},{"group":"SSR","matches":["/example-ssr/MultiLine"]}],"jsdocParsed":{"description":"Adds HTML text labels based on a given list.","tags":[{"title":"type","description":"labels – An array of objects that contain a field containing text label and data fields.","type":{"type":"NameExpression","name":"List"}},{"title":"type","description":"[stroke=''] – The shape's stroke color.","type":{"type":"NameExpression","name":"String"}},{"title":"type","description":"[strokeWidth=0] – The shape's stroke width.","type":{"type":"NameExpression","name":"Number"}}]}}