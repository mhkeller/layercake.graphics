{"main":{"slug":"MapLabels.svg.svelte","contents":"<script>\n  /**\n    Adds SVG text labels based features in the data or a custom GeoJSON Feature Collection.\n    @type {Function} projection – A D3 projection function. Pass this in as an uncalled function, e.g. `projection={geoAlbersUsa}`.\n    @type {Function} getLabel – An accessor function to get the field to display.\n    @type {Function} [getCoordinates=d => d.geometry.coordinates] – An accessor function to get the `[x, y]` coordinate field. Defaults to a GeoJSON feature format.\n    @type {Array} [features=$data.features] – A list of labels. By default, assumes `$data` is a GeoJSON Feature Collection and uses those features.\n  */\n  import { getContext } from 'svelte';\n\n  const { data, width, height } = getContext('LayerCake');\n\n  export let projection;\n  export let getLabel;\n  export let getCoordinates;\n  export let features = $data.features;\n\n  $: projectionFn = projection()\n    .fitSize([$width, $height], $data);\n</script>\n\n<g class=\"map-labels\">\n{#each features as d}\n  <text\n    class=\"map-label\"\n    x=\"{projectionFn(getCoordinates(d))[0]}\"\n    y=\"{projectionFn(getCoordinates(d))[1]}\"\n  >{getLabel(d)}</text>\n{/each}\n</g>\n\n<style>\n  .map-label {\n    color: #333;\n    font-size: 10px;\n    text-anchor: middle;\n  }\n</style>"},"dek":"","usedIn":[{"group":"Regular","matches":[]},{"group":"SSR","matches":[]}],"jsdocParsed":{"description":"Adds SVG text labels based features in the data or a custom GeoJSON Feature Collection.","tags":[{"title":"param","description":"– A D3 projection function. Pass this in as an uncalled function, e.g. `projection={geoAlbersUsa}`.","type":{"type":"NameExpression","name":"Function"},"name":"projection"},{"title":"param","description":"– An accessor function to get the field to display.","type":{"type":"NameExpression","name":"Function"},"name":"getLabel"},{"title":"param","description":"– An accessor function to get the `[x, y]` coordinate field. Defaults to a GeoJSON feature format.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Function"}},"name":"getCoordinates","default":"d=>d.geometry.coordinates"},{"title":"param","description":"– A list of labels. By default, assumes `$data` is a GeoJSON Feature Collection and uses those features.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Array"}},"name":"features","default":"$data.features"}]}}
