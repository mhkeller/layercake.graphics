{"main":{"slug":"Sankey.svelte","contents":"<script>\n  /**\n    Generates an SVG Sankey chart using [d3-sankey](https://github.com/d3/d3-sankey).\n    @param {Function} [colorLinks=d => 'rgba(0, 0, 0, .2)'] – A function to return a color for the links.\n    @param {Function} [colorNodes=d => '#333'] – A function to return a color for each node.\n    @param {Function} [colorText=d => '#263238'] – A function to return a color for each text label.\n    @param {Number} [nodeWidth=5] – The width of each node, in pixels, passed to [`sankey.nodeWidth`](https://github.com/d3/d3-sankey#sankey_nodeWidth).\n    @param {Number} [nodePadding=10] – The padding between nodes, passed to [`sankey.nodePadding`](https://github.com/d3/d3-sankey#sankey_nodePadding).\n    @param {Function} [linkSort=null] – How to sort the links, passed to [`sankey.linkSort`](https://github.com/d3/d3-sankey#sankey_linkSort).\n    @param {Function} [nodeId=d => d.id] – The ID field accessor, passed to [`sankey.nodeId`](https://github.com/d3/d3-sankey#sankey_nodeId).\n    @param {Function} [nodeAlign=d3.sankeyLeft] – An alignment function to position the Sankey blocks. See the [d3-sankey documentation](https://github.com/d3/d3-sankey#alignments) for more.\n  */\n  import { getContext } from 'svelte';\n  import * as Sankey from 'd3-sankey';\n\n  const { data, width, height } = getContext('LayerCake');\n\n  export let colorLinks = d => 'rgba(0, 0, 0, .2)';\n  export let colorNodes = d => '#333';\n  export let colorText = d => '#263238';\n  export let nodeWidth = 5;\n  export let nodePadding = 10;\n  export let linkSort = null;\n  export let nodeId = d => d.id;\n  export let nodeAlign = Sankey.sankeyLeft;\n\n  $: sankey = Sankey.sankey()\n    .nodeAlign(nodeAlign)\n    .nodeWidth(nodeWidth)\n    .nodePadding(nodePadding)\n    .nodeId(nodeId)\n    .size([$width, $height])\n    .linkSort(linkSort);\n\n  $: sankeyData = sankey($data);\n\n  $: link = Sankey.sankeyLinkHorizontal();\n\n  $: fontSize = $width <= 320 ? 8 : 12;\n</script>\n\n<style>\n  text {\n    pointer-events: none;\n  }\n</style>\n\n<g class=\"sankey-layer\">\n  <g class='link-group'>\n    {#each sankeyData.links as d}\n      <path\n        d={link(d)}\n        fill='none'\n        stroke={colorLinks(d)}\n        stroke-opacity='0.5'\n        stroke-width={d.width} />\n    {/each}\n  </g>\n  <g class='rect-group'>\n    {#each sankeyData.nodes as d, i}\n      <rect\n        x={d.x0}\n        y={d.y0}\n        height={d.y1 - d.y0}\n        width={d.x1 - d.x0}\n        fill={colorNodes(d)} />\n      <text\n        x={d.x0 < $width / 4 ? d.x1 + 6 : d.x0 - 6}\n        y={(d.y1 + d.y0) / 2}\n        dy=\"{(fontSize / 2) - 2}\"\n        style=\"fill: {colorText(d)};\n              font-size: {fontSize}px;\n              text-anchor: {d.x0 < $width / 4 ? 'start' : 'end'};\">\n        {d.id}\n      </text>\n    {/each}\n  </g>\n</g>"},"dek":"","usedIn":[{"group":"Regular","matches":["/example/Sankey"]},{"group":"SSR","matches":[]}],"jsdocParsed":{"description":"Generates an SVG Sankey chart using [d3-sankey](https://github.com/d3/d3-sankey).","tags":[{"title":"param","description":"– A function to return a color for the links.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Function"}},"name":"colorLinks","default":"d=>'rgba(0, 0, 0, .2)'"},{"title":"param","description":"– A function to return a color for each node.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Function"}},"name":"colorNodes","default":"d=>'#333'"},{"title":"param","description":"– A function to return a color for each text label.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Function"}},"name":"colorText","default":"d=>'#263238'"},{"title":"param","description":"– The width of each node, in pixels, passed to [`sankey.nodeWidth`](https://github.com/d3/d3-sankey#sankey_nodeWidth).","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Number"}},"name":"nodeWidth","default":"5"},{"title":"param","description":"– The padding between nodes, passed to [`sankey.nodePadding`](https://github.com/d3/d3-sankey#sankey_nodePadding).","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Number"}},"name":"nodePadding","default":"10"},{"title":"param","description":"– How to sort the links, passed to [`sankey.linkSort`](https://github.com/d3/d3-sankey#sankey_linkSort).","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Function"}},"name":"linkSort","default":"null"},{"title":"param","description":"– The ID field accessor, passed to [`sankey.nodeId`](https://github.com/d3/d3-sankey#sankey_nodeId).","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Function"}},"name":"nodeId","default":"d=>d.id"},{"title":"param","description":"– An alignment function to position the Sankey blocks. See the [d3-sankey documentation](https://github.com/d3/d3-sankey#alignments) for more.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Function"}},"name":"nodeAlign","default":"d3.sankeyLeft"}]}}